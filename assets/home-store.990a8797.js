import{au as d,r as m}from"./index.5da81bef.js";import{D as s,E as p}from"./entry.api.service.39873d5b.js";import{api as y}from"./axios.8e74cc6a.js";import{A,N as v}from"./notification.utils.4992636c.js";const f="/api/v1/journal/practice/performances";class g{async update(l,i){try{return(await y.put(`${f}/${l}`,i,{headers:A.getAuthHeader()})).status===204}catch(n){return v.notifyError(n.message),!1}}}var S=new g,c=(a=>(a.SESSION="SESSION",a.CASUAL="CASUAL",a.SOLAR="SOLAR",a.PERMANENT="PERMANENT",a))(c||{});const L=d("home",()=>{const a=m(null);return{day:a,createDay:async t=>{a.value=await s.createDay(t)},retrieveLastDay:async()=>{a.value=await s.retrieveMyLastDay(!0,!0,!0)},updateMyDay:async(t,e)=>{!await s.updateMyDay(t,e)||(a.value.title=e.title)},updateDayTags:async(t,e)=>{const o=e.map(u=>u.id);!await s.updateTags(t,o)||(a.value.tags=e)},createEntry:async t=>{const e=await p.createEntry(t);return console.log("createdId in store = ",e),!!e},submitPerformance:async(t,e)=>{if(!await S.update(t,e))return;if(!a.value||!a.value.assigned||!a.value.assigned.solar)return!0;let r=a.value.assigned.solar.findIndex(u=>u.id==t);return e.exerciseType===c.SOLAR&&(a.value.assigned.solar[r].solarDawnActual=e.solarDawnActual,a.value.assigned.solar[r].solarDawnComment=e.solarDawnComment,a.value.assigned.solar[r].solarNoonActual=e.solarNoonActual,a.value.assigned.solar[r].solarNoonComment=e.solarNoonComment,a.value.assigned.solar[r].solarSunsetActual=e.solarSunsetActual,a.value.assigned.solar[r].solarSunsetComment=e.solarSunsetComment,a.value.assigned.solar[r].solarMidnightActual=e.solarMidnightActual,a.value.assigned.solar[r].solarMidnightComment=e.solarMidnightComment),!0}}});export{L as u};
