import{api as r}from"./axios.cca5ce9b.js";import{A as a,D as o,N as d}from"./notification.utils.d07b912b.js";const n="/api/v1/journal/diary/days";class h{async createDay(e){return(await r.post(`${n}`,e,{headers:a.getAuthHeader()})).data}async searchMyDays(e){return(await r.post(`${n}/search`,e,{headers:a.getAuthHeader()})).data}async retrieveMyDays(){return(await r.get(`${n}`,{headers:a.getAuthHeader()})).data}retrieveMyLastDay(e,t,s){const y=!e&&!t&&!s?"":`?${e?"withEntries=true&":""}${t?"withAstrology=true&":""}${s?"withAssigned=true":""}`;return r.get(`${n}/last/one${y}`,{headers:a.getAuthHeader()}).then(u=>u.data).catch(u=>{if(u.response.status==404)console.log("here"),this.createDay({timestamp:`${o.getTodayDate()} ${o.getCurrentTime()}`,allowPastDate:null});else return d.notifyError(u.response.data.message),null})}retrieveMyDayById(e,t,s,y){const u=!t&&!s&&!y?"":`?${t?"withEntries=true&":""}${s?"withAstrology=true&":""}${y?"withAssigned=true":""}`;return r.get(`${n}/${e}${u}`,{headers:a.getAuthHeader()}).then(i=>i.data).catch(i=>(d.notifyError(i.message),null))}async updateDay(e,t){return(await r.put(`${n}/${e}`,t,{headers:a.getAuthHeader()})).status===204}async updateTags(e,t){return(await r.patch(`${n}/${e}/tags`,t,{headers:a.getAuthHeader()})).data}}var A=new h;const c="/api/v1/journal/diary/entries";class g{async createEntry(e){try{const t=await r.post(`${c}`,e,{headers:a.getAuthHeader()});return d.notifySuccess("Entry Created"),a.extractIdIfCreated(t)}catch(t){return d.notifyError(t.message),null}}async retrieveEntryById(e){return(await r.get(`${c}/${e}`,{headers:a.getAuthHeader()})).data}async updateEntry(e,t){try{return await r.put(`${c}/${e}`,t,{headers:a.getAuthHeader()}),d.notifySuccess("Entry Updated"),!0}catch(s){return d.notifyError(s.message),!1}}async deleteEntry(e){return(await r.delete(`${c}/${e}`,{headers:a.getAuthHeader()})).status===204}async updateTags(e,t){return(await r.post(`${c}/${e}`,t,{headers:a.getAuthHeader()})).status===204}}var D=new g;export{A as D,D as E};
